rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isMember(roomId) {
      return exists(/databases/$(database)/documents/rooms/$(roomId)/members/$(request.auth.uid));
    }

    match /rooms/{roomId} {
      allow read: if isSignedIn();

      allow create: if isSignedIn() && request.resource.data.ownerUid == request.auth.uid;

      allow update: if isSignedIn() && (
        resource.data.ownerUid == request.auth.uid ||
        isMember(roomId)
      );

      allow delete: if isSignedIn() && resource.data.ownerUid == request.auth.uid;

      match /members/{memberId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && request.auth.uid == memberId;
      }

      match /events/{eventId} {
        allow read: if isSignedIn() && isMember(roomId);
        allow create: if isSignedIn() && isMember(roomId);
        allow update, delete: if false;
      }
    }
  }
}
